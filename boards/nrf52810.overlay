

/delete-node/ &storage_partition;

&flash0 {
	partitions {
		storage_partition: partition@28000 {
			label = "storage";
			reg = <0x00028000 0x00008000>; /* 32KB storage */
		};
	};
};

/ {
    chosen {
		zephyr,flash-controller = &flash_controller;
	};

    pwmled {
        compatible = "pwm-leds";
        pwm_led0: pwm_led_0 {
            pwms = <&pwm0 0 PWM_MSEC(5) PWM_POLARITY_INVERTED>;//..refers to PWM controller instance 0, 0  is the channel number on that controller,  output is HIGH during "on" time
        };
         pwm_led1: pwm_led_1 {
            pwms = <&pwm0 1 PWM_MSEC(5) PWM_POLARITY_INVERTED>;
            // label = "PWM LED Green";
        };
         pwm_led2: pwm_led_2 {
            pwms = <&pwm0 2 PWM_MSEC(5) PWM_POLARITY_INVERTED>;
            // label = "PWM LED Green";
        };

    };

     buttons {
        compatible = "gpio-keys";

        button0: button_0 {
            gpios = <&gpio0 5 (GPIO_PULL_DOWN | GPIO_ACTIVE_HIGH)>;
            label = "User Button";
            zephyr,code = <INPUT_KEY_0>;
            
        };
    };

     charger_status: charger_stat {
        compatible = "gpio-leds";

        charger_led: charger_led_0 {
            gpios = <&gpio0 4 (GPIO_PULL_UP | GPIO_ACTIVE_LOW)>;
            label = "Charging Status";
            // zephyr,code = <INPUT_KEY_1>;
            
        };
    };

   ionizer_ctrl: ionizer_ctrl {
        compatible = "gpio-leds";
        ionizer: ionizer {
            gpios = <&gpio0 12 GPIO_ACTIVE_LOW>;
            status = "okay";
            // label = "ionizer";
      };
    };

    aliases {
        pwm-led0 = &pwm_led0;
        pwm-led1 = &pwm_led1;
        pwm-led2 = &pwm_led2; 
        sw0      = &button0;
        charging-stat = &charger_led;
        ionz = &ionizer;
    };

};

&pinctrl {
    pwm0_default: pwm0_default {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 0, 14)>,
                    <NRF_PSEL(PWM_OUT1, 0, 15)>,
                    <NRF_PSEL(PWM_OUT2, 0, 16)>;
                    
            nordic,invert; // Inverts the signal. Useful for LED common-anode setups or just to match polarity (optional).
        };
    };

    pwm0_sleep: pwm0_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 0, 14)>,
                    <NRF_PSEL(PWM_OUT1, 0, 15)>,
                    <NRF_PSEL(PWM_OUT2, 0, 16)>;
    
            low-power-enable;
        };
    };
};

&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_default>;
    pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};




&gpiote {
	status = "okay";
};
&gpio0  { status = "okay"; };
&pwm0   { status = "okay"; };

&adc {
    status = "okay";
};

/* Alias the ADC channel on GPIO 28 (AIN4) */
&adc {
    io-channels = <&adc 4>;
};